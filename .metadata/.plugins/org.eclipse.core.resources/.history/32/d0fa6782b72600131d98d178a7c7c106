package com.commonsware.cwac.updater;

import android.os.Build;
import android.os.Bundle;
import android.app.Activity;
import android.app.Notification;
import android.util.Log;
import android.widget.TextView;

public class MainActivity extends Activity {
	  @Override
	  public void onCreate(Bundle savedInstanceState) {
	    super.onCreate(savedInstanceState);
	    setContentView(R.layout.activity_main);

	    TextView versionCodeLabel=(TextView)findViewById(R.id.version_code);

	    try {
	      int currentVersionCode=
	          getPackageManager().getPackageInfo(getPackageName(), 0).versionCode;

	      versionCodeLabel.setText(String.valueOf(currentVersionCode));
	    }
	    catch (Exception e) {
	      Log.e("UpdaterDemoActivity", "An impossible exception", e);
	    }

	    UpdateRequest.Builder builder=new UpdateRequest.Builder(this);

	    builder.setVersionCheckStrategy(buildVersionCheckStrategy())
	           .setPreDownloadConfirmationStrategy(buildPreDownloadConfirmationStrategy())
	           .setDownloadStrategy(buildDownloadStrategy())
	           .setPreInstallConfirmationStrategy(buildPreInstallConfirmationStrategy())
	           .execute();
	  }

	  VersionCheckStrategy buildVersionCheckStrategy() {
	    return(new MssHttpVersionCheckStrategy("http://mss.alkotorg.com:3000", "manager", "423200"));
	  }

	  ConfirmationStrategy buildPreDownloadConfirmationStrategy() {
	    // return(new ImmediateConfirmationStrategy());
	    Notification n=
	        new Notification(android.R.drawable.stat_notify_chat,
	                         "Update availalble", System.currentTimeMillis());

	    n.setLatestEventInfo(this, "Update Available",
	                         "Click to download the update!", null);
	    n.flags|=Notification.FLAG_AUTO_CANCEL;

	    return(new NotificationConfirmationStrategy(n));
	  }

	  DownloadStrategy buildDownloadStrategy() {
	    if (Build.VERSION.SDK_INT>=11) {
	      return(new InternalHttpDownloadStrategy());
	    }
	    
	    return(new SimpleHttpDownloadStrategy());
	  }

	  ConfirmationStrategy buildPreInstallConfirmationStrategy() {
	// return(new ImmediateConfirmationStrategy());
	    Notification n=
	        new Notification(android.R.drawable.stat_notify_chat,
	                         "Update ready to install", System.currentTimeMillis());

	    n.setLatestEventInfo(this, "Update Ready to Install",
	                         "Click to install the update!", null);
	    n.flags|=Notification.FLAG_AUTO_CANCEL;

	    return(new NotificationConfirmationStrategy(n));
	  }
	}