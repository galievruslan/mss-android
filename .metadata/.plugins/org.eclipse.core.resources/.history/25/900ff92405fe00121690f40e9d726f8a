package com.mss.application;

import java.lang.ref.WeakReference;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.content.Loader;

import com.mss.application.fragments.RoutePointFragment;
import com.mss.domain.models.RoutePoint;


internal static abstract class PaneMode {

	protected final WeakReference<RouteActivity> mWeakActivity;

	public PaneMode(RouteActivity activity) {
		mWeakActivity = new WeakReference<RouteActivity>(activity);
	}

	/**
	 * Called by the {@link AbsNoteActivity#onCreate(Bundle)} method
	 */
	public abstract void onCreate(Bundle savedInstanceState);

	/**
	 * Called by the {@link AbsNoteActivity#onNoteSelected(Note, int, long)} method
	 * 
	 * @param n
	 *            the {@link Note} instance that was selected
	 * @param position
	 *            the position on the list
	 * @param id
	 *            {@link Note} id
	 */
	public abstract void onRoutePointSelected(RoutePoint n, int position, long id);

	/**
	 * Called when a {@link Note} was added.
	 */
	public abstract void onAddRoutePoint();

	/**
	 * Called when the {@link Loader} finishes its work
	 * 
	 * @param loader the {@link Loader} object
	 * @param data returned list of {@link Note Notes}
	 */
	public void onLoadFinished(Loader<List<RoutePoint>> loader, List<RoutePoint> data) {
		RoutePointAdapter routeAdapter = mWeakActivity.get().mRoutePointAdapter;
		routeAdapter.swapData(data);
		mWeakActivity.get().getRouteFragment().setListAdapter(routeAdapter);
	}
}

/**
 * One-pane mode specific logic
 */
private static class OnePaneMode extends PaneMode {

	public OnePaneMode(RouteActivity activity) {
		super(activity);
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		RouteActivity activity = mWeakActivity.get();

		if (savedInstanceState == null) {
			// Activity is being recreated
		}

		RoutePointFragment f = (RoutePointFragment) activity.getSupportFragmentManager().findFragmentById(R.id.fragment_route_point);
		if (f != null) {
			// We don't need the RoutePointFragment in OnePaneMode so we get rid of it

			activity.getSupportFragmentManager().beginTransaction().remove(f).commit();
		}
	}

	@Override
	public void onRoutePointSelected(RoutePoint n, int position, long id) {
		RouteActivity activity = mWeakActivity.get();

		Intent intent = new Intent(activity, RoutePointActivity.class);
		intent.putExtra(activity.getString(R.string.key_id), id);
		activity.startActivityForResult(intent, RoutePointActivity.REQUEST_SHOW_ROUTE_POINT);
	}

	@Override
	public void onAddRoutePoint() {
		RouteActivity activity = mWeakActivity.get();

		Intent intent = new Intent(activity, RoutePointEditActivity.class);
		intent.putExtra(RoutePointEditActivity.KEY_ROUTE_DATE, activity.getRouteFragment().getRouteDate().toString());
		activity.startActivityForResult(intent, 0);
	}
}

/**
 * Dual-pane mode specific logic
 */
private static class DualPaneMode extends PaneMode {

	public DualPaneMode(RouteActivity activity) {
		super(activity);
	}

	/**
	 * In dual pane mode we want to show a NoteFragment if there's one in the database
	 */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		if (savedInstanceState == null) {
			// Activity is being recreated
		}
	}

	@Override
	public void onRoutePointSelected(RoutePoint n, int position, long id) {
		RouteActivity activity = mWeakActivity.get();

		RoutePointFragment currentFragment = activity.getRoutePointFragment();

		if (currentFragment == null || currentFragment.getRoutePointId() != id) {
			// Let's swap the NoteFragment with the selected one

			activity.getSupportFragmentManager().beginTransaction()
				.replace(R.id.fragment_route_point, RoutePointFragment.newInstance(n)).commit();
		}
	}

	@Override
	public void onAddRoutePoint() {
		RouteActivity activity = mWeakActivity.get();

		Intent intent = new Intent(activity, RoutePointEditActivity.class);
		intent.putExtra(RoutePointEditActivity.KEY_ROUTE_DATE, activity.getRouteFragment().getRouteDate().toString());
		activity.startActivityForResult(intent, 0);
	}

	@Override
	public void onLoadFinished(Loader<List<RoutePoint>> loader, List<RoutePoint> data) {
		super.onLoadFinished(loader, data);

		RouteActivity activity = mWeakActivity.get();

		// In DualPaneMode we want to show a side NoteFragment
		// Remember that we can not do FragmentTransactions in onLoadFinished

		activity.showRoutePointByPosition(activity.getRouteFragment().getLastClickedPosition());
	}
}