package com.mss.infrastructure.ormlite;

import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.ParseException;

import com.j256.ormlite.dao.Dao;
import com.j256.ormlite.dao.GenericRawResults;
import com.j256.ormlite.dao.RawRowMapper;
import com.mss.domain.models.OrderPickupItem;
import com.mss.domain.models.PriceListLine;
import com.mss.infrastructure.data.IRepository;

public class OrmliteOrderPickupItemRepository implements IRepository<OrderPickupItem> {

	private Dao<PriceListLine, Integer> priceListLineDao;
	public OrmliteOrderPickupItemRepository(DatabaseHelper databaseHelper, long priceListId) throws Throwable{
		priceListLineDao = databaseHelper.getPriceListLineDao();
	}

	@Override
	public OrderPickupItem getById(long id) throws Throwable {
		GenericRawResults<OrderPickupItem> rawResults =
				priceListLineDao.queryRaw(
				    "select account_id,sum(amount) from orders group by account_id",
				    new RawRowMapper<OrderPickupItem>() {
				            public OrderPickupItem mapRow(String[] columnNames,
				              String[] resultColumns) {
				            	DecimalFormat decimalFormat = (DecimalFormat) NumberFormat.getInstance();
				            	decimalFormat.setParseBigDecimal(true);
				            	BigDecimal price = null;
				            	try {
									price = (BigDecimal)decimalFormat.parse(resultColumns[3]);
								} catch (ParseException e) {
									price = new BigDecimal(0);
								}
				            	
				            	return new OrderPickupItem(Long.parseLong(resultColumns[0]),
				                		Long.parseLong(resultColumns[1]),
				                		resultColumns[2],
				                		price);
				        }
				    });
		
		OrderPickupItem orderPickupItem = rawResults.getFirstResult();
		rawResults.close();
		return orderPickupItem;
	}

	@Override
	public Iterable<OrderPickupItem> find() throws Throwable {
		GenericRawResults<OrderPickupItem> rawResults =
				priceListLineDao.queryRaw(
				    "select account_id,sum(amount) from orders group by account_id",
				    new RawRowMapper<OrderPickupItem>() {
				            public OrderPickupItem mapRow(String[] columnNames,
				              String[] resultColumns) {
				            	DecimalFormat decimalFormat = (DecimalFormat) NumberFormat.getInstance();
				            	decimalFormat.setParseBigDecimal(true);
				            	BigDecimal price = null;
				            	try {
									price = (BigDecimal)decimalFormat.parse(resultColumns[3]);
								} catch (ParseException e) {
									price = new BigDecimal(0);
								}
				            	
				            	return new OrderPickupItem(Long.parseLong(resultColumns[0]),
				                		Long.parseLong(resultColumns[1]),
				                		resultColumns[2],
				                		price);
				        }
				    });
		
		Iterable<OrderPickupItem> orderPickupItems = rawResults.getResults();
		rawResults.close();
		return orderPickupItems;
	}

	@Override
	public void save(OrderPickupItem entity) throws Throwable {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void delete(OrderPickupItem entity) throws Throwable {
		// TODO Auto-generated method stub
		
	}
}
