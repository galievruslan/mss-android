package com.mss.infrastructure.ormlite;

import com.j256.ormlite.dao.GenericRawResults;
import com.j256.ormlite.dao.RawRowMapper;
import com.j256.ormlite.stmt.QueryBuilder;
import com.mss.domain.models.Constants;
import com.mss.domain.models.Route;
import com.mss.domain.models.RoutePoint;

public class OrmliteRoutePointRepository extends OrmliteGenericRepository<RoutePoint> {

	public OrmliteRoutePointRepository(DatabaseHelper databaseHelper) throws Throwable{
		super(databaseHelper.getRoutePointDao());
	}
	
	@Override
	public RoutePoint getById(long id) throws Throwable {
		GenericRawResults<RoutePoint> rawResults =
				  dao.queryRaw(
				    "select " + Constants.Tables.Entity.ID_FIELD + ", " +
				    			Constants.Tables.RoutePoint.ROUTE_FIELD + ", " +
						    	Constants.Tables.RoutePoint.SHIPPING_ADDRESS_FIELD + ", " +
								Constants.Tables.RoutePoint.STATUS_FIELD + ", " +
								Constants.Tables.RoutePoint.SYNCHRONIZED_FIELD + ", " +
								Constants.Tables.ShippingAddress.NAME_FIELD + ", " +
								Constants.Tables.ShippingAddress.ADDRESS_FIELD +
					" from " + Constants.Tables.RoutePoint.TABLE_NAME + " as route_point " +
					" left join " + Constants.Tables.ShippingAddress.TABLE_NAME + " as shipping_addres on route_point." + 
						Constants.Tables.RoutePoint.SHIPPING_ADDRESS_FIELD + " = shipping_addres." + Constants.Tables.Entity.ID_FIELD + 
					" where "
				  
				    		account_id,sum(amount) from orders group by account_id",
				    new RawRowMapper<RoutePoint>() {
				            public RoutePoint mapRow(String[] columnNames,
				              String[] resultColumns) {
				                return new RoutePoint(Long.parseLong(resultColumns[0]),
				                    Integer.parseInt(resultColumns[1]));
				        }
				    });
		
		return rawResults.getFirstResult();
	}
	
	public Iterable<RoutePoint> findByRoute(Route route) throws Throwable {
		
		QueryBuilder<RoutePoint, Integer> queryBuilder = dao.queryBuilder();
		
		queryBuilder.where().like(com.mss.domain.models.Constants.Tables.RoutePoint.ROUTE_FIELD , route.getId());
		return dao.query(queryBuilder.prepare());
	}
}
