package com.mss.application.tasks;

import java.util.List;

import org.apache.http.NameValuePair;

import com.mss.domain.models.Route;
import com.mss.domain.models.RoutePoint;
import com.mss.infrastructure.data.IRepository;
import com.mss.infrastructure.ormlite.OrmliteRoutePointRepository;
import com.mss.infrastructure.ormlite.OrmliteRouteRepository;
import com.mss.infrastructure.web.WebServer;

public class PostRoutes extends PostTask<com.mss.domain.models.Route> {

	private OrmliteRouteRepository routeRepo;
	private OrmliteRoutePointRepository routePointRepo;
	public PostRoutes(WebServer webServer, String url,
			OrmliteRouteRepository routeRepo,
			OrmliteRoutePointRepository routePointRepo) {
		super(webServer, url, routeRepo);
		this.routeRepo = routeRepo;
		this.routePointRepo = routePointRepo;
	}

	@Override
	protected Boolean doAttemptInBackground(Void... arg0) throws Throwable {
		Iterable<Route> routes = routeRepo.findNotSynchronized();
		for (Route route : routes) {
			Iterable<RoutePoint> points = routePointRepo.findByRouteId(route.getId());			
			webServer.Post(url, ToPostParams(route, points));
		}
		
		return true;
	}
	
	private List<NameValuePair> ToPostParams(Route route, Iterable<RoutePoint> points) {
		
	}
}
