package com.mss.domain.services;

import java.util.Date;
import java.util.Iterator;

import android.util.Log;

import com.mss.application.RoutePointActivity;
import com.mss.domain.models.Route;
import com.mss.infrastructure.ormlite.DatabaseHelper;
import com.mss.infrastructure.ormlite.OrmliteRouteRepository;

public class RouteService {
	private static final String TAG = RouteService.class.getSimpleName();
	
	private DatabaseHelper databaseHelper;
	private OrmliteRouteRepository routeRepo;
	public RouteService(DatabaseHelper databaseHelper) throws Throwable{
		this.databaseHelper = databaseHelper;
		routeRepo = new OrmliteRouteRepository(this.databaseHelper);
	}
	
	public Route getById(long id) {
		try {
			return routeRepo.getById(id);
		} catch (Throwable e) {
			Log.e(TAG, e.getMessage());
		}
		
		return null;
	}
	
	public Route getOnDate(Date date) {
		try {
			Date dateOnly = new Date(date.getYear(), date.getMonth(), date.getDate());
		
			Iterator<Route> iterator = routeRepo.findByDate(dateOnly).iterator();
			if (iterator.hasNext())
				return iterator.next();
		} catch (Throwable e) {
			Log.e(TAG, e.getMessage());
		}
		
		return null;
	}
	
	public Route createRoute(Date date) {
		Date dateOnly = new Date(date.getYear(), date.getMonth(), date.getDate());		
		return new Route(dateOnly);
	}
	
	public void saveRoute(Route route){
		try {
			routeRepo.save(route);
		} catch (Throwable e) {
			Log.e(TAG, e.getMessage());
		}
	}
}
