package com.mss.android.web.repositories;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

public class WebHelpers {
	public static HttpURLConnection getHttpURLConnection(WebConnection connection, String address) throws WebConnectionException {
		try {
			URL url = new URL(address);
			if (HttpURLConnection.getFollowRedirects())
				HttpURLConnection.setFollowRedirects(false);
			
			HttpURLConnection httpUrlConnection = (HttpURLConnection) url.openConnection();
			httpUrlConnection.setRequestMethod("GET");
			httpUrlConnection.addRequestProperty("User-Agent", "MSS.Android mobile client");
		 
			String cookie = connection.getCookie();
			if (cookie.length() > 0) {
				httpUrlConnection.setRequestProperty("Cookie", cookie);	
			}				
			
			if (httpUrlConnection.getResponseCode() != 200) {
				throw new RuntimeException("Failed : HTTP error code : "
					+ httpUrlConnection.getResponseCode());
			}
			
			return httpUrlConnection;
			
		} catch (MalformedURLException e) {		 
			e.printStackTrace(); 
		} catch (IOException e) { 
			e.printStackTrace(); 
		}
		
		throw new WebConnectionException();
	}
	
	public static String DispatchHttpURLConnection(WebConnection connection, HttpURLConnection httpURLConnection) {
		String output = "";
		try {
			BufferedReader br = new BufferedReader(new InputStreamReader(
				(httpURLConnection.getInputStream())));
	 		
			while ((output = br.readLine()) != null) {
				System.out.println(output);
			}
		}
		catch (IOException e) {			 
			e.printStackTrace();	 
		}
		
		return output;
	}
	
	private static void extractCsrfToken(String source) {
		
	}
}
