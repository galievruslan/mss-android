package com.mss.application;

import java.util.List;

import com.j256.ormlite.android.apptools.OpenHelperManager;
import com.mss.domain.models.Customer;
import com.mss.domain.services.CustomerService;
import com.mss.infrastructure.ormlite.DatabaseHelper;

import android.view.View;
import android.view.ViewGroup;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View.OnClickListener;
import android.widget.BaseAdapter;
import android.widget.BaseExpandableListAdapter;
import android.widget.TextView;

public class CategoriesExpandableListAdapter extends BaseExpandableListAdapter {

	  public CategoriesExpandableListAdapter() {
	  }

	  public Object getChild(int groupPosition, int childPosition) {
	    return children[groupPosition][childPosition];
	  }

	  public long getChildId(int groupPosition, int childPosition) {
	    return childPosition;
	  }

	  public int getChildrenCount(int groupPosition) {
	    return children[groupPosition].length;
	  }

	  public TextView getGenericView() {
	    // Layout parameters for the ExpandableListView
	    AbsListView.LayoutParams lp = new AbsListView.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 64);

	    TextView textView = new TextView(ProductsActivity.this);
	    textView.setLayoutParams(lp);
	    // Center the text vertically
	    textView.setGravity(Gravity.CENTER_VERTICAL | Gravity.LEFT);
	    // Set the text starting position
	    textView.setPadding(36, 0, 0, 0);
	    return textView;
	  }

	  public View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {
	    TextView textView = getGenericView();
	    textView.setText(getChild(groupPosition, childPosition).toString());
	    return textView;
	  }

	  public Object getGroup(int groupPosition) {
	    return groups[groupPosition];
	  }

	  public int getGroupCount() {
	    return groups.length;
	  }

	  public long getGroupId(int groupPosition) {
	    return groupPosition;
	  }

	  public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {
	    TextView textView = getGenericView();
	    textView.setText(getGroup(groupPosition).toString());
	    return textView;
	  }

	  public boolean isChildSelectable(int groupPosition, int childPosition) {
	    return true;
	  }

	  public boolean hasStableIds() {
	    return true;
	  }
}